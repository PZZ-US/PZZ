{
  "Budowa języków programowania i ich podział": "Języki programowania różnią się składnią i semantyką. Podział obejmuje języki niskiego i wysokiego poziomu, proceduralne, obiektowe, funkcyjne oraz skryptowe.",
  "Podstawowe typy danych, typy podzielne, literały": "Podstawowe typy danych to np. liczby całkowite, zmiennoprzecinkowe, znaki. Typy podzielne to te, które można dzielić na mniejsze części, np. listy czy tablice. Literały to wartości, np. liczbowe czy tekstowe, wprowadzane bezpośrednio do programu.",
  "Metoda siłowa. Zgadnij i sprawdź. Przeszukiwanie wyczerpujące": "Metoda siłowa polega na rozwiązaniu problemu przez przetestowanie wszystkich możliwych rozwiązań. Zgadnij i sprawdź to heurystyczna metoda rozwiązywania problemów. Przeszukiwanie wyczerpujące to strategia przeszukiwania wszystkich możliwych stanów w celu znalezienia rozwiązania.",
  "Modularyzacja programu: podprogramy. Funkcje oraz procedury. Deklaracja i definicja funkcji. Zasady wywoływania funkcji. Komunikacja z innymi podprogramami.": "Modularyzacja to podział programu na mniejsze, zarządzalne części. Podprogramy to funkcje i procedury, których deklaracja zawiera informacje o ich istnieniu, a definicja określa ich działanie. Wywołanie funkcji i procedury oraz komunikacja z innymi podprogramami to kluczowe zagadnienia modularyzacji.",
  "Dekompozycja i abstrakcja. Parametry formalne i argumenty. Parametry domyślne.": "Dekompozycja to podział problemu na mniejsze podproblemy. Abstrakcja polega na ukrywaniu szczegółów implementacyjnych. Parametry formalne to nazwy parametrów w definicji funkcji, a argumenty to ich konkretne wartości. Parametry domyślne to wartości, które są przypisywane parametrom, jeśli nie są podane explicite przy wywołaniu funkcji.",
  "Zasięg i jego funkcja. Zmienne lokalne i globalne.": "Zasięg określa, gdzie zmienna jest dostępna w programie. Zmienne lokalne są widoczne tylko wewnątrz danego bloku kodu, a zmienne globalne są dostępne w całym programie.",
  "Stos i jego funkcja.": "Stos to struktura danych, gdzie dane są dodawane i usuwane według zasady Last In First Out (LIFO). Jest używany do przechowywania informacji o wywołaniach funkcji i lokalnych zmiennych.",
  "Programowanie defensywne. Wyjątki.": "Programowanie defensywne to praktyka unikania błędów poprzez sprawdzanie i walidację danych. Wyjątki to mechanizm obsługi sytuacji wyjątkowych, które mogą wystąpić w trakcie wykonania programu.",
  "Testowanie oprogramowania. Testy strukturalne i funkcjonalne.": "Testowanie oprogramowania to proces sprawdzania, czy program działa zgodnie z oczekiwaniami. Testy strukturalne sprawdzają strukturę wewnętrzną programu, a testy funkcjonalne oceniają zachowanie programu.",
  "Błędy i ich podział.": "Błędy w programowaniu dzielą się na składniowe, logiczne i czasu wykonania. Błędy składniowe dotyczą błędnej składni programu, błędy logiczne to błędne działanie programu, a błędy czasu wykonania pojawiają się w trakcie działania programu.",
  "Dziel i zwyciężaj. Rekurencja. Przypadek podstawowy i część indukcyjna. Przykłady.": "Dziel i zwyciężaj to strategia rozwiązania problemu poprzez podzielenie go na mniejsze podproblemy. Rekurencja to technika, w której funkcja odwołuje się do samej siebie. Przypadek podstawowy to warunek zakończenia rekurencji, a część indukcyjna definiuje sposób rozwiązania problemu dla większych danych.",
  "Programowanie zorientowane obiektowo. Obiekty i ich identyfikatory, typy, tożsamość, stan. Instancje. Funkcje klas i metody instancji. Klasy abstrakcyjne.": "Programowanie zorientowane obiektowo opiera się na koncepcji obiektów, które posiadają identyfikatory, typy, tożsamość i stan. Instancje to konkretne wystąpienia obiektów. Funkcje klas definiują zachowanie klasy, a metody instancji to operacje, które obiekt może wykonywać. Klasy abstrakcyjne to klasy, które nie mogą być instancjonowane bezpośrednio.",
  "Dziedziczenie. Hierarchia klas, klasy bazowe i pochodne.": "Dziedziczenie to mechanizm umożliwiający tworzenie nowych klas na podstawie istniejących. Hierarchia klas określa relacje pomiędzy klasami. Klasy bazowe to te, na podstawie których tworzone są nowe klasy pochodne.",
  "Debugowanie, usuwanie błędów.": "Debugowanie to proces znajdowania i naprawiania błędów w programie. To może obejmować używanie narzędzi do śledzenia błędów, analizy kodu oraz testów.",
  "Polimorfizm. Przeciążanie operatorów. Rzutowanie.": "Polimorfizm to możliwość operowania na różnych typach danych w sposób jednolity. Przeciążanie operatorów pozwala na zdefiniowanie różnych działań dla tych samych operatorów w zależności od kontekstu. Rzutowanie to konwersja jednego typu danych na inny."
}
